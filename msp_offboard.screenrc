#
# Screen конфигурация для запуска msp_offboard.launch
#
# Основана на pi.screenrc
#
shell /bin/bash
startup_message off

# Увеличенный буфер прокрутки
defscrollback 5000

escape ``

# Статусная строка внизу экрана
hardstatus             alwayslastline
hardstatus string '%{= kG}[ %{G}%H %{g}][%= %{= kw}%?%-Lw%?%{r}(%{W}%n*%f%t%?(%u)%?%{r})%{w}%?%+Lw%?%?%= %{g}][%{B} %d/%m %{W}%c %{g}]'

# Включаем многопользовательский режим
multiuser on

# Запуск roscore
screen -t "rcore"
stuff "roscore\n"
stuff ""

# Запуск msp_offboard.launch - главный экран
screen -t "MSP_OFFBOARD"
stuff "cd ~/catkin_ws/src/pidrone_pkg\n"
stuff "sleep 3 && roslaunch pidrone_pkg msp_offboard.launch\n"

# Вывод текущего состояния дрона
screen -t "STATUS"
stuff "cd ~/catkin_ws/src/pidrone_pkg/scripts\n"
stuff "rostopic echo /pidrone/state\n"

# Просмотр режима дрона
screen -t "MODE"
stuff "cd ~/catkin_ws/src/pidrone_pkg/scripts\n"
stuff "rostopic echo /pidrone/mode\n"

# Свободные экраны для тестов
screen -t "test1"
stuff "cd ~/catkin_ws/src/pidrone_pkg/scripts\n"
stuff "# Здесь можно запускать тестовые скрипты\n"

screen -t "test2"
stuff "cd ~/catkin_ws/src/pidrone_pkg/scripts\n"
stuff "# Здесь можно запускать тестовые скрипты\n"

screen -t "test3"
stuff "cd ~/catkin_ws/src/pidrone_pkg/scripts\n"
stuff "# Здесь можно запускать тестовые скрипты\n"

# Мониторинг ошибок ROS
screen -t "rosout"
stuff "rostopic echo /rosout\n"

# Мониторинг ресурсов
screen -t "htop"
stuff "htop\n" 